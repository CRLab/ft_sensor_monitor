/* auto-generated by genmsg_cpp from /arm/force_sensor_serial_port/msg/ForceTorqueTare.msg.  Do not edit! */
#ifndef FORCE_SENSOR_SERIAL_PORT_FORCETORQUETARE_H
#define FORCE_SENSOR_SERIAL_PORT_FORCETORQUETARE_H

#include <string>
#include <vector>
#include "ros/message.h"
#include "ros/debug.h"
#include "ros/assert.h"
#include "ros/time.h"

namespace force_sensor_serial_port
{

//! \htmlinclude ForceTorqueTare.msg.html

class ForceTorqueTare : public ros::Message
{
public:
  typedef boost::shared_ptr<ForceTorqueTare> Ptr;
  typedef boost::shared_ptr<ForceTorqueTare const> ConstPtr;



  ForceTorqueTare() : ros::Message()
  {
  }
  ForceTorqueTare(const ForceTorqueTare &copy) : ros::Message()
  {
    (void)copy;
  }
  ForceTorqueTare &operator =(const ForceTorqueTare &copy)
  {
    if (this == &copy)
      return *this;
    return *this;
  }
  virtual ~ForceTorqueTare() 
  {
  }
  inline static std::string __s_getDataType() { return std::string("force_sensor_serial_port/ForceTorqueTare"); }
  inline static std::string __s_getMD5Sum() { return std::string("d41d8cd98f00b204e9800998ecf8427e"); }
  inline static std::string __s_getMessageDefinition()
  {
    return std::string(
    "#\n"
    "# COPYRIGHT (C) 2005-2010\n"
    "# RE2, INC.\n"
    "# ALL RIGHTS RESERVED\n"
    "#\n"
    "# This is free software:\n"
    "# you can redistribute it and/or modify it under the terms of the GNU General\n"
    "# Public License as published by the Free Software Foundation, either version\n"
    "# 3 of the License, or (at your option) any later version.\n"
    "#\n"
    "# You should have received a copy of the GNU General Public License along\n"
    "# with this package.  If not, see <http://www.gnu.org/licenses/>.\n"
    "#\n"
    "# RE2, INC. disclaims all warranties with regard to this software, including\n"
    "# all implied warranties of merchantability and fitness, in no event shall\n"
    "# RE2, INC. be liable for any special, indirect or consequential damages or\n"
    "# any damages whatsoever resulting from loss of use, data or profits, whether\n"
    "# in an action of contract, negligence or other tortious action, arising out\n"
    "# of or in connection with the use or performance of this software.\n"
    "#\n"
    "#\n"
    "#\n"
    "# Tares the force torque sensor.\n"
    "\n"
    "\n"
    "\n"
    );
  }
  inline virtual const std::string __getDataType() const { return __s_getDataType(); }
  inline virtual const std::string __getMD5Sum() const { return __s_getMD5Sum(); }
  inline virtual const std::string __getMessageDefinition() const { return __s_getMessageDefinition(); }
  inline uint32_t serializationLength() const
  {
    unsigned __l = 0;
    return __l;
  }
  virtual uint8_t *serialize(uint8_t *write_ptr,
#if defined(__GNUC__)
                             __attribute__((unused)) uint32_t seq) const
#else
                             uint32_t seq) const
#endif
  {
    return write_ptr;
  }
  virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    return read_ptr;
  }
};

typedef boost::shared_ptr<ForceTorqueTare> ForceTorqueTarePtr;
typedef boost::shared_ptr<ForceTorqueTare const> ForceTorqueTareConstPtr;


}

#endif
